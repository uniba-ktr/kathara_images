name: Docker Image CI

env:
  REGISTRY: ghcr.io

on:
  push:
    branches:
      - '**'
      - '!main'
  pull_request:
    branches:
      - 'main'

jobs:

  base_images:
    strategy:
      matrix:
        base_images: [alpine, debian]

    runs-on: ubuntu-latest
    steps:

    - name: Set time
      run: echo "BUILD_DATE=$(date +%s)" >> $GITHUB_ENV
    - name: downcase REPO
      run: echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
    - name: Checkout
      uses: actions/checkout@v3.4.0
    # https://github.com/docker/setup-qemu-action
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2.1.0

    # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2.5.0

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4.3.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.REPO }}/${{ matrix.base_images }}
        tags: |
          type=sha,prefix={{branch}}-
          type=raw,value=${{ env.BUILD_DATE }}-{{branch}}

    - name: Build and push
      uses: docker/build-push-action@v4.0.0
      with:
        context: ./base_images/
        file: ./base_images/${{ matrix.base_images }}.dockerfile
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}


  #singlestage_images:
  #  needs: base_images
  #  strategy:
  #    matrix:
  #      singlestage_images: [ab, apache, coredns, frr, ipv6, ovs, quagga, traefik, wireguard]
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: List images
  #      run: docker image ls


  multistage_images_alpine:
    needs: base_images
    strategy:
      matrix:
        multistage_images: [softether, whoami]
    runs-on: ubuntu-latest
    steps:

      - name: Set time
        run: echo "BUILD_DATE=$(date +%s)" >> ${GITHUB_ENV}
      - name: downcase REPO
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      - name: Checkout
        uses: actions/checkout@v3.4.0
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO }}/${{ matrix.multistage_images }}
          tags: |
            type=sha,prefix=${{ env.BUILD_DATE }}-
            type=raw,value={{branch}}


      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./multistage_images/
          file: ./multistage_images/${{ matrix.multistage_images }}.dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            image=${{ env.REGISTRY }}/${{ env.REPO }}/alpine:${GITHUB_REF_NAME}

      - name: List images
        run: docker image ls
