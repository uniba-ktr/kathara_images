name: Local Build

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  REGISTRY: local

on:
  push:
    branches:
      - '**'
      - '!main'

jobs:
  base_images:
    strategy:
      matrix:
        base_images: [alpine, debian]
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3.4.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and export
      uses: docker/build-push-action@v4
      with:
        context: ./base_images/
        file: ./base_images/${{ matrix.base_images }}.dockerfile
        outputs: type=docker,dest=/tmp/${{ matrix.base_images }}.tar
        tags: ${{ env.REGISTRY }}/${{ matrix.base_images }}
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.base_images }}
        path: /tmp/${{ matrix.base_images }}.tar


   simple_build:
     needs: base_images
     strategy:
       matrix:
         singlestage_images: [ab, apache, coredns, frr, ipv6, ovs, quagga, traefik, wireguard]
     runs-on: ubuntu-latest
     steps:
       - name: Checkout
         uses: actions/checkout@v3.4.0
       # https://github.com/docker/setup-buildx-action
       - name: Download artifact
         uses: actions/download-artifact@v3
         with:
           name: alpine
           path: /tmp
       - name: Load image
         run: |
           docker load --input /tmp/alpine.tar
           docker image ls -a

       - name: Build
         run: docker build ./singlestage_images/ -f ./singlestage_images/${{ matrix.singlestage_images }}.dockerfile --load -t ${{ matrix.singlestage_images }}:${{ env.BRANCH_NAME }} --build-args: image=${{ env.REGISTRY }}/alpine

       - name: List images
         run: docker image ls
