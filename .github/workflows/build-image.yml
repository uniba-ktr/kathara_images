name: Docker Image CI

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  REGISTRY: local

on:
  push:
    branches:
      - '**'
      - '!main'

jobs:

  base_images:
    strategy:
      matrix:
        base_images: [alpine, debian]
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v3.4.0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and export
      uses: docker/build-push-action@v4
      with:
        context: ./base_images/
        file: ./base_images/${{ matrix.base_images }}.dockerfile
        outputs: type=docker,dest=/tmp/${{ matrix.base_images }}.tar
        tags: ${{ env.REGISTRY }}/${{ matrix.base_images }}
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.base_images }}
        path: /tmp/${{ matrix.base_images }}.tar


  singlestage_images:
    needs: base_images
    strategy:
      matrix:
        singlestage_images: [ab, apache, coredns, frr, ipv6, ovs, quagga, traefik, wireguard]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.4.0
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: alpine
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/alpine.tar
          docker image ls -a

      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./singlestage_images/
          file: ./singlestage_images/${{ matrix.singlestage_images }}.dockerfile
          load: true
          tags: ${{ matrix.singlestage_images }}:${{ env.BRANCH_NAME }}
          build-args: |
            image=${{ env.REGISTRY }}/alpine

      - name: List images
        run: docker image ls


  multistage_images_alpine:
    needs: base_images
    strategy:
      matrix:
        multistage_images: [softether, whoami]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.4.0
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: alpine
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/alpine.tar
          docker image ls -a

      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./multistage_images/
          file: ./multistage_images/${{ matrix.multistage_images }}.dockerfile
          load: true
          tags: ${{ matrix.multistage_images }}:${{ env.BRANCH_NAME }}
          build-args: |
            image=${{ env.REGISTRY }}/alpine

      - name: List images
        run: docker image ls

  multistage_images_debian:
    needs: base_images
    strategy:
      matrix:
        multistage_images: [onos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.4.0
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: debian
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/debian.tar
          docker image ls -a

      - name: Build and push
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./multistage_images/
          file: ./multistage_images/${{ matrix.multistage_images }}.dockerfile
          load: true
          tags: ${{ matrix.multistage_images }}:${{ env.BRANCH_NAME }}
          build-args: |
            image=${{ env.REGISTRY }}/debian

      - name: List images
        run: docker image ls
